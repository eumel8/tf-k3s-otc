#!/bin/bash -xe

DEBIAN_FRONTEND=noninteractive
# install mysql-client (retry if network is not ready
for i in 1 2 3 4 5; do
  apt update && break || sleep 10;
done
apt -y upgrade
apt -y install mysql-client

# doing os hardening
# https://github.com/dev-sec/puppet-os-hardening

wget https://apt.puppetlabs.com/puppet-release-focal.deb
dpkg -i puppet-release-focal.deb || exit 1
rm -f puppet-release-focal.deb

apt update
apt install -y puppet-agent

systemctl stop puppet
systemctl disable puppet
/opt/puppetlabs/bin/puppet module install hardening-os_hardening || exit 1

cat > hardening.pp << EOF
class { 'os_hardening':
  enable_ipv4_forwarding => true,
}
EOF

/opt/puppetlabs/bin/puppet apply hardening.pp || exit 1
rm -f hardening.pp

for i in 1 2 3 4 5; do
  mysql -uroot -P${rds_port} -h${rds_host} -p${rds_root_password} -e "CREATE DATABASE IF NOT EXISTS ${rds_db}" && break || sleep 10;
done

# install k3s with MySQL backend
if [ "${k3s_version}" == "latest" ] || [ "${k3s_version}" == "stable" ]; then
  curl -svfL4 --retry 100 https://get.k3s.io | INSTALL_K3S_CHANNEL=${k3s_version} sh -s - server --datastore-endpoint="mysql://root:${rds_root_password}@tcp(${rds_host}:${rds_port})/${rds_db}"
else
  curl -svfL4 --retry 100 https://get.k3s.io | INSTALL_K3S_VERSION=${k3s_version} sh -s - server --datastore-endpoint="mysql://root:${rds_root_password}@tcp(${rds_host}:${rds_port})/${rds_db}"
fi
